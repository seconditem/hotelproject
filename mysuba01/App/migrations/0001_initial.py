# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-09-15 16:05
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cid', models.AutoField(primary_key=True, serialize=False)),
                ('cname', models.CharField(max_length=60)),
                ('parentid', models.IntegerField()),
                ('compere', models.CharField(blank=True, max_length=30, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
                ('namestyle', models.CharField(blank=True, max_length=10, null=True)),
                ('logo', models.CharField(blank=True, max_length=200, null=True)),
                ('themenum', models.IntegerField(blank=True, null=True)),
                ('replynum', models.IntegerField(blank=True, null=True)),
                ('lastpost', models.CharField(blank=True, max_length=600, null=True)),
            ],
            options={
                'db_table': 'bbs_category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Friendlink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site', models.CharField(max_length=100)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('logo', models.CharField(blank=True, max_length=300, null=True)),
                ('orderby', models.IntegerField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'db_table': 'bbs_friendlink',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Lockip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=20)),
                ('starttime', models.DateTimeField(blank=True, null=True)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bbs_lockip',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('money', models.IntegerField()),
                ('paytime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bbs_order',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=600)),
                ('content', models.TextField(blank=True, null=True)),
                ('hits', models.IntegerField()),
                ('istop', models.IntegerField()),
                ('iselite', models.IntegerField()),
                ('ishot', models.IntegerField()),
                ('price', models.IntegerField()),
                ('isdel', models.SmallIntegerField()),
                ('publishtime', models.DateTimeField(blank=True, null=True)),
                ('replies', models.IntegerField()),
                ('cid', models.ForeignKey(blank=True, db_column='cid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='App.Category')),
            ],
            options={
                'db_table': 'bbs_posts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('rid', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(blank=True, max_length=1000, null=True)),
                ('istop', models.IntegerField(blank=True, null=True)),
                ('isdel', models.SmallIntegerField(blank=True, null=True)),
                ('isblock', models.SmallIntegerField(blank=True, null=True)),
                ('createtime', models.DateTimeField(blank=True, null=True)),
                ('tid', models.ForeignKey(blank=True, db_column='tid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='App.Posts')),
            ],
            options={
                'db_table': 'bbs_reply',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Siteinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('reference', models.CharField(blank=True, max_length=200, null=True)),
                ('isclose', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bbs_siteinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Userdetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('qq', models.CharField(blank=True, max_length=15, null=True)),
                ('signature', models.CharField(blank=True, max_length=200, null=True)),
                ('quesstion', models.CharField(blank=True, max_length=100, null=True)),
                ('answer', models.CharField(blank=True, max_length=200, null=True)),
                ('grade', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'bbs_userdetail',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('portrait', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.IntegerField(blank=True, null=True)),
                ('usertype', models.IntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('autologin', models.IntegerField(blank=True, null=True)),
                ('regtime', models.DateTimeField(blank=True, null=True)),
                ('score', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'bbs_user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userdetail',
            name='uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='detail', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reply',
            name='uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='posts',
            name='uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='tid',
            field=models.ForeignKey(blank=True, db_column='tid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='App.Posts'),
        ),
        migrations.AddField(
            model_name='order',
            name='uid',
            field=models.ForeignKey(blank=True, db_column='uid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
    ]
