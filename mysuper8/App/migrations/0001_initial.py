# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-09-16 16:28
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='HotelInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=11)),
                ('address', models.CharField(max_length=128)),
                ('desc', models.CharField(max_length=150)),
                ('web', models.IntegerField(choices=[(0, '无'), (1, '有')], default=0)),
                ('service', models.TextField(max_length=150)),
                ('inquerment', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'hotel_info',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_time', models.DateTimeField()),
                ('check_out_time', models.DateTimeField()),
                ('username', models.CharField(max_length=30, null=True)),
                ('user_nums', models.IntegerField(default=1)),
                ('order_room_num', models.IntegerField(default=1)),
                ('last_in_time', models.DateTimeField()),
                ('phone', models.CharField(max_length=11)),
                ('price', models.FloatField()),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('order_status', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'hotel_order',
            },
        ),
        migrations.CreateModel(
            name='Reflex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=60, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('level', models.IntegerField(choices=[(0, '吐槽'), (1, '差'), (2, '一般'), (3, '很满意'), (4, '强烈推荐')], default=2)),
                ('content', models.TextField(max_length=150)),
                ('score', models.FloatField(default=6.0)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='orderid', to='App.Order')),
            ],
            options={
                'db_table': 'hotel_reflex',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_status', models.IntegerField(choices=[(0, '预定'), (1, '入住'), (2, '空闲')], default=2)),
            ],
            options={
                'db_table': 'hotel_room',
            },
        ),
        migrations.CreateModel(
            name='RoomStyle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.IntegerField(default=0)),
                ('size', models.IntegerField()),
                ('num', models.IntegerField(default=10)),
                ('iswindow', models.IntegerField(choices=[(0, '无'), (1, '有')])),
                ('iswifi', models.IntegerField(choices=[(0, '无'), (1, '有')])),
                ('bathroom', models.IntegerField(choices=[(0, '无'), (1, '有')])),
                ('breakfast', models.IntegerField(choices=[(0, '无'), (1, '有')])),
                ('desc', models.TextField(max_length=100)),
                ('dorprice', models.FloatField()),
                ('webprice', models.FloatField()),
                ('huiyuanprice', models.FloatField()),
            ],
            options={
                'db_table': 'hotel_roomstyle',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=11, null=True)),
                ('realname', models.CharField(max_length=60)),
                ('usertype', models.IntegerField(default=0, null=True)),
                ('regtime', models.DateField(auto_now_add=True)),
                ('pict', models.CharField(max_length=128, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'hotel_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='typeid',
            field=models.ForeignKey(db_column='roomstyleid', on_delete=django.db.models.deletion.CASCADE, related_name='type', to='App.RoomStyle'),
        ),
        migrations.AddField(
            model_name='order',
            name='room',
            field=models.OneToOneField(db_column='roomstyle', on_delete=django.db.models.deletion.CASCADE, to='App.RoomStyle'),
        ),
        migrations.AddField(
            model_name='order',
            name='user_id',
            field=models.ForeignKey(db_column='user_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL),
        ),
    ]
